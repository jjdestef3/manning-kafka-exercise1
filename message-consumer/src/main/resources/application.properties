# App
app.name=exercise 1
app.service-version = 1.0.0
app.service-description = Sample message consumer
app.kafka-topic=event

# Kafka
quarkus.kafka.health.enabled=true
kafka.bootstrap.servers=192.168.1.130:9092
kafka.acks=all
kafka.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.value.deserializer=com.jdallc.manning.exercise1.consumer.core.domain.model.EventRequestDeserializer
kafka.group.id=event-processor

# MP messaging
mp.messaging.incoming.event.connector=smallrye-kafka
mp.messaging.incoming.event.topic=event
mp.messaging.incoming.event.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.event.value.deserializer=com.jdallc.manning.exercise1.consumer.core.domain.model.EventRequestDeserializer
mp.messaging.incoming.event.group.id=events_consumer_group


# Required by streams library
# quarkus.kafka-streams.topics=event

# HTTP
quarkus.http.port=9090
quarkus.http.root-path=/manning/exercise1/
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.limits.max-body-size=10M
quarkus.http.limits.max-header-size=20K

# Logging
quarkus.log.level=INFO

# SSL
quarkus.ssl.native=true

# Database
# configure your datasource
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = postgres
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/postgres

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create

# Dev config
%dev.quarkus.log.console.json=false

# Test config
%test.quarkus.log.console.json=false
